version: '3.8'

services:
  # Main API service
  medical-validator-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_WORKERS=4
      - API_DEBUG=false
      - LOG_LEVEL=INFO
      # v1.2 specific environment variables
      - ENABLE_V12_COMPLIANCE=true
      - ENABLE_V12_ANALYTICS=true
      - ENABLE_V12_MONITORING=true
      - COMPLIANCE_TEMPLATES_PATH=/app/compliance_templates
      - ANALYTICS_CACHE_ENABLED=true
      - MONITORING_ALERT_THRESHOLD=80
    volumes:
      - ./logs:/app/logs
      - ./compliance_templates:/app/compliance_templates
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Web dashboard service
  medical-validator-dashboard:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      # v1.2 specific environment variables
      - ENABLE_V12_COMPLIANCE=true
      - ENABLE_V12_ANALYTICS=true
      - ENABLE_V12_MONITORING=true
      - COMPLIANCE_TEMPLATES_PATH=/app/compliance_templates
      - ANALYTICS_CACHE_ENABLED=true
    volumes:
      - ./logs:/app/logs
      - ./compliance_templates:/app/compliance_templates
    restart: unless-stopped
    command: ["python", "medical_data_validator_cli.py", "dashboard"]
    depends_on:
      - medical-validator-api

  # Development service (with hot reload)
  medical-validator-dev:
    build: .
    ports:
      - "8001:8000"
      - "5001:5000"
    environment:
      - API_DEBUG=true
      - FLASK_DEBUG=true
      - LOG_LEVEL=DEBUG
      # v1.2 specific environment variables (development)
      - ENABLE_V12_COMPLIANCE=true
      - ENABLE_V12_ANALYTICS=true
      - ENABLE_V12_MONITORING=true
      - COMPLIANCE_TEMPLATES_PATH=/app/compliance_templates
      - ANALYTICS_CACHE_ENABLED=false
      - MONITORING_ALERT_THRESHOLD=70
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./compliance_templates:/app/compliance_templates
    restart: unless-stopped
    command: ["python", "api.py", "--debug"]

  # Load balancer (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - medical-validator-api
      - medical-validator-dashboard
    restart: unless-stopped
    profiles:
      - production

  # Redis for caching (optional)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data: 